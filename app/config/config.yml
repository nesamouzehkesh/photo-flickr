imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: "@AppBundle/Resources/config/services.yml" }
    - { resource: "@FlikerBundle/Resources/config/services.yml" }
    
    
# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    app_saltmain: ""
    app_printerType: "Brother"
    app_mailerType: "Gmail"
    app_loggerType: "SMSLogger"    
    app_paginateLimit: 10
    
    app_service_params:
        debug: true
        paginateLimit: %app_paginateLimit%
    
# Symfony framework main configurations
framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~


# Twig configurations
# Twig compiles templates down to plain optimized PHP code. 
#
# http://twig.sensiolabs.org/documentation#reference
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        twig:
            app:
                modules:
                    dashboard:
                        route: admin_app_dashboard
                    user: 
                        route: admin_user_index
                    fliker:
                        route: admin_fliker_category_index

# Doctrine configurations
# Its prize projects are an object-relational mapper (ORM) and the database 
# abstraction layer it is built on top of 
#
# https://doctrine-orm.readthedocs.org/en/latest/
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true


# Swiftmailer Configuration
# Swift Mailer integrates into any web app written in PHP 5, offering a flexible and 
# elegant object-oriented approach to sending emails with a multitude of features. 
#
# http://symfony.com/doc/current/reference/configuration/swiftmailer.html
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


# KNP paginator bundle
# This component introduces a different way for pagination handling
#
# https://github.com/KnpLabs/KnpPaginatorBundle
knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template   
        
        
# Symfony assetic configurations
# Assetic combines two major ideas: assets and filters. The assets are files such as CSS, 
# JavaScript and image files. The filters are things that can be applied to these files 
# before they are served to the browser. 
#
# http://symfony.com/doc/current/cookbook/assetic/asset_management.html
assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~        